# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build package

on:
  push:
    branches-ignore:
      - dependabot/**
    tags:
      - v*
  pull_request:
    branches:
      - magistra

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Use Node.js
      uses: actions/setup-node@v1
    - name: Install package
      run: npm ci
    - name: Build webpack
      run: npm run build-production
    - name: Create a package
      run: npm run create-package
    - name: Rename package via git-rev
      run: mv 'kagimori.zip' "kagimori-$(git describe --tags).zip"
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: kagimori
        path: '*.zip'

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1.1.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          commitish: ${{ github.sha }}
          draft: true
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  upload:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: kagimori
          path: kagimori
      - name: Grab filename
        run: |
          ::set-output name=path::$(find kagimori/ -mindepth 1 -maxdepth 1 -type f -name '*.zip')
        id: output
      - name: Upload release asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${{ jobs.steps.output.path }}
          asset_name: ${{ jobs.steps.output.path }}
          asset_content_type: application/zip
